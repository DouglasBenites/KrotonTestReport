package br.com.kroton.dao.generic;

import java.util.List;

import javax.persistence.Query;

import br.com.kroton.jpa.ReportBean;
import br.com.kroton.jpa.ReportInfoGeralBean;

public class ReportDAO extends GenericDAO<Object> {

	public ReportDAO() {
		super(null);
		// TODO Auto-generated constructor stub
	}
	
	public List<ReportInfoGeralBean> infoGerais(){
		StringBuffer sb = new StringBuffer("");
		sb.append(" select 	(select count(*) from tramite) 					as qt,");
		sb.append(" 		(");
		sb.append(" 			select time_format(sec_to_time(avg(times.dif_sec)), '%Hh:%im') as media");
		sb.append(" 			from ");
		sb.append(" 			(");
		sb.append(" 					select			timediff");
		sb.append(" 									(");
		sb.append(" 										(");
		sb.append(" 											select 		min(t2.dt_tramite) ");
		sb.append(" 											from 		(");
		sb.append(" 															select		id_sequencia, ");
		sb.append(" 																		id_solicitacao, ");
		sb.append(" 																		dt_tramite,");
		sb.append(" 																		case");
		sb.append(" 																			when ds_obs in (\"AGUARDANDO ANALISE DO COORDENADOR\")");
		sb.append(" 																			then");
		sb.append(" 																				'TA'");
		sb.append(" 																			else");
		sb.append(" 																				'TP'");
		sb.append(" 																			end as tipo");
		sb.append(" 																		");
		sb.append(" 															from		tramite");
		sb.append(" 															where		ds_obs in (");
		sb.append(" 																			\"AGUARDANDO ANALISE DO COORDENADOR\", ");
		sb.append(" 																			\"DEVOLVIDO PARA REVISÃO DO POLO\",");
		sb.append(" 																			\"FINALIZADO COM APROVEITAMENTO\",");
		sb.append(" 																			\"FINALIZADO SEM APROVEITAMENTO\",");
		sb.append(" 																			\"PROCESSO INDEFERIDO\"");
		sb.append(" 																		)");
		sb.append(" 															order by	id_solicitacao, id_sequencia");
		sb.append(" 														) t2 ");
		sb.append(" 											where 		t2.id_sequencia >= at_data.id_sequencia+1");
		sb.append(" 											and			t2.id_solicitacao = at_data.id_solicitacao");
		sb.append(" 										),");
		sb.append(" 										dt_tramite");
		sb.append(" 										");
		sb.append(" 									) AS DIF,");
		sb.append(" 									timestampdiff");
		sb.append(" 									(");
		sb.append(" 										second,");
		sb.append(" 										dt_tramite,");
		sb.append(" 										(");
		sb.append(" 											select 		min(t2.dt_tramite) ");
		sb.append(" 											from 		(");
		sb.append(" 															select		id_sequencia, ");
		sb.append(" 																		id_solicitacao, ");
		sb.append(" 																		dt_tramite,");
		sb.append(" 																		case");
		sb.append(" 																			when ds_obs in (\"AGUARDANDO ANALISE DO COORDENADOR\")");
		sb.append(" 																			then");
		sb.append(" 																				'TA'");
		sb.append(" 																			else");
		sb.append(" 																				'TP'");
		sb.append(" 																			end AS TIPO");
		sb.append(" 																		");
		sb.append(" 															from		tramite");
		sb.append(" 															where		ds_obs in (");
		sb.append(" 																			\"AGUARDANDO ANALISE DO COORDENADOR\", ");
		sb.append(" 																			\"DEVOLVIDO PARA REVISÃO DO POLO\",");
		sb.append(" 																			\"FINALIZADO COM APROVEITAMENTO\",");
		sb.append(" 																			\"FINALIZADO SEM APROVEITAMENTO\",");
		sb.append(" 																			\"PROCESSO INDEFERIDO\"");
		sb.append(" 																		)");
		sb.append(" 															order by	id_solicitacao, id_sequencia");
		sb.append(" 														) t2 ");
		sb.append(" 											where 		t2.id_sequencia >= at_data.id_sequencia+1");
		sb.append(" 											and			t2.id_solicitacao = at_data.id_solicitacao");
		sb.append(" 										)");
		sb.append(" 									) as dif_sec,");
		sb.append(" 									id_solicitacao,");
		sb.append(" 									tipo");
		sb.append(" 					from");
		sb.append(" 					(");
		sb.append(" 						select		id_sequencia, ");
		sb.append(" 									id_solicitacao, ");
		sb.append(" 									dt_tramite,");
		sb.append(" 									case");
		sb.append(" 										when ds_obs in (\"AGUARDANDO ANALISE DO COORDENADOR\")");
		sb.append(" 										then");
		sb.append(" 											'TA'");
		sb.append(" 										else");
		sb.append(" 											'TP'");
		sb.append(" 										end as tipo");
		sb.append(" 									");
		sb.append(" 						from		tramite");
		sb.append(" 						where		ds_obs in (");
		sb.append(" 										\"AGUARDANDO ANALISE DO COORDENADOR\", ");
		sb.append(" 										\"DEVOLVIDO PARA REVISÃO DO POLO\",");
		sb.append(" 										\"FINALIZADO COM APROVEITAMENTO\",");
		sb.append(" 										\"FINALIZADO SEM APROVEITAMENTO\",");
		sb.append(" 										\"PROCESSO INDEFERIDO\"");
		sb.append(" 									)");
		sb.append(" 						order by	id_solicitacao, id_sequencia");
		sb.append(" 					) at_data");
		sb.append(" 			) times");
		sb.append(" 			where		times.dif_sec is not null");
		sb.append(" 		)												as tmg,");
		sb.append(" 		time_format(sec_to_time(sum(tma)), '%Hh:%im') 	as tmag,");
		sb.append(" 		time_format(sec_to_time(sum(tmp)), '%Hh:%im') 	as tmpg");
		sb.append(" 	from");
		sb.append(" 	(");
		sb.append(" 		select 	id_solicitacao, ");
		sb.append(" 				(case when tipo = \"TA\" then media else 0 end) as tma,");
		sb.append(" 				(case when tipo = \"TP\" then media else 0 end) as tmp");
		sb.append(" 		from");
		sb.append(" 		(");
		sb.append(" 			select avg(times.dif_sec) as media, id_solicitacao, tipo");
		sb.append(" 			from ");
		sb.append(" 			(");
		sb.append(" 					select			timediff");
		sb.append(" 									(");
		sb.append(" 										(");
		sb.append(" 											select 		min(t2.dt_tramite) ");
		sb.append(" 											from 		(");
		sb.append(" 															select		id_sequencia, ");
		sb.append(" 																		id_solicitacao, ");
		sb.append(" 																		dt_tramite,");
		sb.append(" 																		case");
		sb.append(" 																			when ds_obs in (\"AGUARDANDO ANALISE DO COORDENADOR\")");
		sb.append(" 																			then");
		sb.append(" 																				'TA'");
		sb.append(" 																			else");
		sb.append(" 																				'TP'");
		sb.append(" 																			end as tipo");
		sb.append(" 																		");
		sb.append(" 															from		tramite");
		sb.append(" 															where		ds_obs in (");
		sb.append(" 																			\"AGUARDANDO ANALISE DO COORDENADOR\", ");
		sb.append(" 																			\"DEVOLVIDO PARA REVISÃO DO POLO\",");
		sb.append(" 																			\"FINALIZADO COM APROVEITAMENTO\",");
		sb.append(" 																			\"FINALIZADO SEM APROVEITAMENTO\",");
		sb.append(" 																			\"PROCESSO INDEFERIDO\"");
		sb.append(" 																		)");
		sb.append(" 															order by	id_solicitacao, id_sequencia");
		sb.append(" 														) t2 ");
		sb.append(" 											where 		t2.id_sequencia >= at_data.id_sequencia+1");
		sb.append(" 											and			t2.id_solicitacao = at_data.id_solicitacao");
		sb.append(" 										),");
		sb.append(" 										dt_tramite");
		sb.append(" 										");
		sb.append(" 									) AS DIF,");
		sb.append(" 									timestampdiff");
		sb.append(" 									(");
		sb.append(" 										second,");
		sb.append(" 										dt_tramite,");
		sb.append(" 										(");
		sb.append(" 											select 		min(t2.dt_tramite) ");
		sb.append(" 											from 		(");
		sb.append(" 															select		id_sequencia, ");
		sb.append(" 																		id_solicitacao, ");
		sb.append(" 																		dt_tramite,");
		sb.append(" 																		case");
		sb.append(" 																			when ds_obs in (\"AGUARDANDO ANALISE DO COORDENADOR\")");
		sb.append(" 																			then");
		sb.append(" 																				'TA'");
		sb.append(" 																			else");
		sb.append(" 																				'TP'");
		sb.append(" 																			end AS TIPO");
		sb.append(" 																		");
		sb.append(" 															from		tramite");
		sb.append(" 															where		ds_obs in (");
		sb.append(" 																			\"AGUARDANDO ANALISE DO COORDENADOR\", ");
		sb.append(" 																			\"DEVOLVIDO PARA REVISÃO DO POLO\",");
		sb.append(" 																			\"FINALIZADO COM APROVEITAMENTO\",");
		sb.append(" 																			\"FINALIZADO SEM APROVEITAMENTO\",");
		sb.append(" 																			\"PROCESSO INDEFERIDO\"");
		sb.append(" 																		)");
		sb.append(" 															order by	id_solicitacao, id_sequencia");
		sb.append(" 														) t2 ");
		sb.append(" 											where 		t2.id_sequencia >= at_data.id_sequencia+1");
		sb.append(" 											and			t2.id_solicitacao = at_data.id_solicitacao");
		sb.append(" 										)");
		sb.append(" 									) as dif_sec,");
		sb.append(" 									id_solicitacao,");
		sb.append(" 									tipo");
		sb.append(" 					from");
		sb.append(" 					(");
		sb.append(" 						select		id_sequencia, ");
		sb.append(" 									id_solicitacao, ");
		sb.append(" 									dt_tramite,");
		sb.append(" 									case");
		sb.append(" 										when ds_obs in (\"AGUARDANDO ANALISE DO COORDENADOR\")");
		sb.append(" 										then");
		sb.append(" 											'TA'");
		sb.append(" 										else");
		sb.append(" 											'TP'");
		sb.append(" 										end as tipo");
		sb.append(" 									");
		sb.append(" 						from		tramite");
		sb.append(" 						where		ds_obs in (");
		sb.append(" 										\"AGUARDANDO ANALISE DO COORDENADOR\", ");
		sb.append(" 										\"DEVOLVIDO PARA REVISÃO DO POLO\",");
		sb.append(" 										\"FINALIZADO COM APROVEITAMENTO\",");
		sb.append(" 										\"FINALIZADO SEM APROVEITAMENTO\",");
		sb.append(" 										\"PROCESSO INDEFERIDO\"");
		sb.append(" 									)");
		sb.append(" 						order by	id_solicitacao, id_sequencia");
		sb.append(" 					) at_data");
		sb.append(" 			) times");
		sb.append(" 			where		times.dif_sec is not null");
		sb.append(" 			group by id_solicitacao, tipo");
		sb.append(" 		) avgs");
		sb.append(" 	) tms");
		
		Query q = em.createNativeQuery(sb.toString(), ReportInfoGeralBean.class);
		@SuppressWarnings("unchecked")
		List<ReportInfoGeralBean> result = q.getResultList();
		return result;
	}

	public List<ReportBean> getDataReport(Integer idSolicitacao){
		StringBuffer sp = new StringBuffer();
		sp.append(" select		nta.id_solicitacao 	as solicitacao,");
		sp.append(" 			nta.qtde 			as nta,");
		sp.append(" 			lead.leadtime 		as leadtime,");
		sp.append("             max_ta.max_ta		as maxta,");
		sp.append("             tms.tma,");
		sp.append("             tms.tmp,");
		sp.append("             st.nome				as stats,");
		sp.append("             sv.nome				as servico,");
		sp.append("             c.nome				as curso");
		sp.append(" from");
		sp.append(" 	(");
		sp.append(" 		select		id_solicitacao, ");
		sp.append(" 					concat( time_format(timediff(max(dt_tramite), min(dt_tramite)),'%H'), 'h') as leadtime");
		sp.append(" 		from		tramite");
		sp.append(" 		group by	id_solicitacao");
		sp.append(" 	) lead,");
		sp.append(" 	(");
		sp.append(" 		select	count(*) as qtde, id_solicitacao");
		sp.append(" 		from");
		sp.append(" 		(");
		sp.append(" 			select		id_sequencia, ");
		sp.append(" 						id_solicitacao, ");
		sp.append(" 						dt_tramite,");
		sp.append(" 						case");
		sp.append(" 							when ds_obs in (\"AGUARDANDO ANALISE DO COORDENADOR\")");
		sp.append(" 							then");
		sp.append(" 								'TP'");
		sp.append(" 							else");
		sp.append(" 								'TA'");
		sp.append(" 							end as tipo");
		sp.append(" 						");
		sp.append(" 			from		tramite");
		sp.append(" 			where		ds_obs in (");
		sp.append(" 							\"AGUARDANDO ANALISE DO COORDENADOR\", ");
		sp.append(" 							\"DEVOLVIDO PARA REVISÃO DO POLO\",");
		sp.append(" 							\"FINALIZADO COM APROVEITAMENTO\",");
		sp.append(" 							\"FINALIZADO SEM APROVEITAMENTO\",");
		sp.append(" 							\"PROCESSO INDEFERIDO\"");
		sp.append(" 						)");
		sp.append(" 			order by	id_solicitacao, id_sequencia");
		sp.append(" 		) at_data");
		sp.append(" 		where	at_data.tipo = \"TA\"");
		sp.append(" 		group by id_solicitacao");
		sp.append(" 	) nta,");
		sp.append("     (");
		sp.append(" 			select max(dif) as max_ta, id_solicitacao");
		sp.append(" 		from");
		sp.append(" 			(");
		sp.append(" 				select			time_format");
		sp.append(" 								(");
		sp.append(" 									timediff");
		sp.append(" 									(");
		sp.append(" 										(");
		sp.append(" 											select 		min(t2.dt_tramite) ");
		sp.append(" 											from 		(");
		sp.append(" 															select		id_sequencia, ");
		sp.append(" 																		id_solicitacao, ");
		sp.append(" 																		dt_tramite,");
		sp.append(" 																		case");
		sp.append(" 																			when ds_obs in (\"AGUARDANDO ANALISE DO COORDENADOR\")");
		sp.append(" 																			then");
		sp.append(" 																				'TA'");
		sp.append(" 																			else");
		sp.append(" 																				'TP'");
		sp.append(" 																			end as tipo");
		sp.append(" 																		");
		sp.append(" 															from		tramite");
		sp.append(" 															where		ds_obs in (");
		sp.append(" 																			\"AGUARDANDO ANALISE DO COORDENADOR\", ");
		sp.append(" 																			\"DEVOLVIDO PARA REVISÃO DO POLO\",");
		sp.append(" 																			\"FINALIZADO COM APROVEITAMENTO\",");
		sp.append(" 																			\"FINALIZADO SEM APROVEITAMENTO\",");
		sp.append(" 																			\"PROCESSO INDEFERIDO\"");
		sp.append(" 																		)");
		sp.append(" 															order by	id_solicitacao, id_sequencia");
		sp.append(" 														) t2 ");
		sp.append(" 											where 		t2.id_sequencia >= at_data.id_sequencia+1");
		sp.append(" 											and			t2.id_solicitacao = at_data.id_solicitacao");
		sp.append(" 										),");
		sp.append(" 										dt_tramite");
		sp.append(" 										");
		sp.append(" 									),");
		sp.append(" 									'%Hh:%im'");
		sp.append(" 								) as dif,");
		sp.append(" 								timestampdiff");
		sp.append(" 								(");
		sp.append(" 									second,");
		sp.append(" 									dt_tramite,");
		sp.append(" 									(");
		sp.append(" 										select 		min(t2.dt_tramite) ");
		sp.append(" 										from 		(");
		sp.append(" 														select		id_sequencia, ");
		sp.append(" 																	id_solicitacao, ");
		sp.append(" 																	dt_tramite,");
		sp.append(" 																	case");
		sp.append(" 																		when ds_obs in (\"AGUARDANDO ANALISE DO COORDENADOR\")");
		sp.append(" 																		then");
		sp.append(" 																			'TA'");
		sp.append(" 																		else");
		sp.append(" 																			'TP'");
		sp.append(" 																		end as tipo");
		sp.append(" 																	");
		sp.append(" 														from		tramite");
		sp.append(" 														where		ds_obs in (");
		sp.append(" 																		\"AGUARDANDO ANALISE DO COORDENADOR\", ");
		sp.append(" 																		\"DEVOLVIDO PARA REVISÃO DO POLO\",");
		sp.append(" 																		\"FINALIZADO COM APROVEITAMENTO\",");
		sp.append(" 																		\"FINALIZADO SEM APROVEITAMENTO\",");
		sp.append(" 																		\"PROCESSO INDEFERIDO\"");
		sp.append(" 																	)");
		sp.append(" 														order by	id_solicitacao, id_sequencia");
		sp.append(" 													) t2 ");
		sp.append(" 										where 		t2.id_sequencia >= at_data.id_sequencia+1");
		sp.append(" 										and			t2.id_solicitacao = at_data.id_solicitacao");
		sp.append(" 									)");
		sp.append(" 								) as dif_sec,");
		sp.append(" 								id_solicitacao");
		sp.append(" 				from");
		sp.append(" 				(");
		sp.append(" 					select		id_sequencia, ");
		sp.append(" 								id_solicitacao, ");
		sp.append(" 								dt_tramite,");
		sp.append(" 								case");
		sp.append(" 									when ds_obs in (\"AGUARDANDO ANALISE DO COORDENADOR\")");
		sp.append(" 									then");
		sp.append(" 										'TA'");
		sp.append(" 									else");
		sp.append(" 										'TP'");
		sp.append(" 									end as tipo");
		sp.append(" 								");
		sp.append(" 					from		tramite");
		sp.append(" 					where		ds_obs in (");
		sp.append(" 									\"AGUARDANDO ANALISE DO COORDENADOR\", ");
		sp.append(" 									\"DEVOLVIDO PARA REVISÃO DO POLO\",");
		sp.append(" 									\"FINALIZADO COM APROVEITAMENTO\",");
		sp.append(" 									\"FINALIZADO SEM APROVEITAMENTO\",");
		sp.append(" 									\"PROCESSO INDEFERIDO\"");
		sp.append(" 								)");
		sp.append(" 					order by	id_solicitacao, id_sequencia");
		sp.append(" 				) at_data");
		sp.append(" 				where	at_data.tipo = \"TA\"");
		sp.append(" 			) tot");
		sp.append(" 		where dif_sec is not null");
		sp.append(" 		group by id_solicitacao");
		sp.append(" 	) max_ta,");
		sp.append("     (");
		sp.append(" 		select 	id_solicitacao, ");
		sp.append(" 			time_format(sec_to_time(sum(tma)), '%Hh:%im') as tma,");
		sp.append(" 			time_format(sec_to_time(sum(tmp)), '%Hh:%im') as tmp");
		sp.append(" 	from");
		sp.append(" 	(");
		sp.append(" 		select 	id_solicitacao, ");
		sp.append(" 				(case when tipo = \"TA\" then media else 0 end) as tma,");
		sp.append(" 				(case when tipo = \"TP\" then media else 0 end) as tmp");
		sp.append(" 		from");
		sp.append(" 		(");
		sp.append(" 			select avg(times.dif_sec) as media, id_solicitacao, tipo");
		sp.append(" 			from ");
		sp.append(" 			(");
		sp.append(" 					select			timediff");
		sp.append(" 									(");
		sp.append(" 										(");
		sp.append(" 											select 		min(t2.dt_tramite) ");
		sp.append(" 											from 		(");
		sp.append(" 															select		id_sequencia, ");
		sp.append(" 																		id_solicitacao, ");
		sp.append(" 																		dt_tramite,");
		sp.append(" 																		case");
		sp.append(" 																			when ds_obs in (\"AGUARDANDO ANALISE DO COORDENADOR\")");
		sp.append(" 																			then");
		sp.append(" 																				'TA'");
		sp.append(" 																			else");
		sp.append(" 																				'TP'");
		sp.append(" 																			end as tipo");
		sp.append(" 																		");
		sp.append(" 															from		tramite");
		sp.append(" 															where		ds_obs in (");
		sp.append(" 																			\"AGUARDANDO ANALISE DO COORDENADOR\", ");
		sp.append(" 																			\"DEVOLVIDO PARA REVISÃO DO POLO\",");
		sp.append(" 																			\"FINALIZADO COM APROVEITAMENTO\",");
		sp.append(" 																			\"FINALIZADO SEM APROVEITAMENTO\",");
		sp.append(" 																			\"PROCESSO INDEFERIDO\"");
		sp.append(" 																		)");
		sp.append(" 															order by	id_solicitacao, id_sequencia");
		sp.append(" 														) t2 ");
		sp.append(" 											where 		t2.id_sequencia >= at_data.id_sequencia+1");
		sp.append(" 											and			t2.id_solicitacao = at_data.id_solicitacao");
		sp.append(" 										),");
		sp.append(" 										dt_tramite");
		sp.append(" 										");
		sp.append(" 									) AS DIF,");
		sp.append(" 									timestampdiff");
		sp.append(" 									(");
		sp.append(" 										second,");
		sp.append(" 										dt_tramite,");
		sp.append(" 										(");
		sp.append(" 											select 		min(t2.dt_tramite) ");
		sp.append(" 											from 		(");
		sp.append(" 															select		id_sequencia, ");
		sp.append(" 																		id_solicitacao, ");
		sp.append(" 																		dt_tramite,");
		sp.append(" 																		case");
		sp.append(" 																			when ds_obs in (\"AGUARDANDO ANALISE DO COORDENADOR\")");
		sp.append(" 																			then");
		sp.append(" 																				'TA'");
		sp.append(" 																			else");
		sp.append(" 																				'TP'");
		sp.append(" 																			end AS TIPO");
		sp.append(" 																		");
		sp.append(" 															from		tramite");
		sp.append(" 															where		ds_obs in (");
		sp.append(" 																			\"AGUARDANDO ANALISE DO COORDENADOR\", ");
		sp.append(" 																			\"DEVOLVIDO PARA REVISÃO DO POLO\",");
		sp.append(" 																			\"FINALIZADO COM APROVEITAMENTO\",");
		sp.append(" 																			\"FINALIZADO SEM APROVEITAMENTO\",");
		sp.append(" 																			\"PROCESSO INDEFERIDO\"");
		sp.append(" 																		)");
		sp.append(" 															order by	id_solicitacao, id_sequencia");
		sp.append(" 														) t2 ");
		sp.append(" 											where 		t2.id_sequencia >= at_data.id_sequencia+1");
		sp.append(" 											and			t2.id_solicitacao = at_data.id_solicitacao");
		sp.append(" 										)");
		sp.append(" 									) as dif_sec,");
		sp.append(" 									id_solicitacao,");
		sp.append(" 									tipo");
		sp.append(" 					from");
		sp.append(" 					(");
		sp.append(" 						select		id_sequencia, ");
		sp.append(" 									id_solicitacao, ");
		sp.append(" 									dt_tramite,");
		sp.append(" 									case");
		sp.append(" 										when ds_obs in (\"AGUARDANDO ANALISE DO COORDENADOR\")");
		sp.append(" 										then");
		sp.append(" 											'TA'");
		sp.append(" 										else");
		sp.append(" 											'TP'");
		sp.append(" 										end as tipo");
		sp.append(" 									");
		sp.append(" 						from		tramite");
		sp.append(" 						where		ds_obs in (");
		sp.append(" 										\"AGUARDANDO ANALISE DO COORDENADOR\", ");
		sp.append(" 										\"DEVOLVIDO PARA REVISÃO DO POLO\",");
		sp.append(" 										\"FINALIZADO COM APROVEITAMENTO\",");
		sp.append(" 										\"FINALIZADO SEM APROVEITAMENTO\",");
		sp.append(" 										\"PROCESSO INDEFERIDO\"");
		sp.append(" 									)");
		sp.append(" 						order by	id_solicitacao, id_sequencia");
		sp.append(" 					) at_data");
		sp.append(" 			) times");
		sp.append(" 			where		times.dif_sec is not null");
		sp.append(" 			group by id_solicitacao, tipo");
		sp.append(" 		) avgs");
		sp.append(" 	) tms");
		sp.append(" 	group by id_solicitacao");
		sp.append(" 	) tms,");
		sp.append(" 	solicitacao s, status st, servico sv, curso c");
		sp.append(" where nta.id_solicitacao 	= lead.id_solicitacao");
		sp.append(" and   lead.id_solicitacao 	= max_ta.id_solicitacao");
		sp.append(" and   tms.id_solicitacao	= lead.id_solicitacao");
		sp.append(" and	  s.id          		= tms.id_solicitacao");
		sp.append(" and	  s.id_servico			= sv.id");
		sp.append(" and	  s.id_curso			= c.id");
		sp.append(" and	  s.id_status			= st.id");
		sp.append(" and   nta.id_solicitacao	= ifnull(?1, nta.id_solicitacao);");
		
		Query q = em.createNativeQuery(sp.toString(), ReportBean.class);
		q.setParameter(1, idSolicitacao);
		@SuppressWarnings("unchecked")
		List<ReportBean> result = q.getResultList();
		return result;
	}
}
